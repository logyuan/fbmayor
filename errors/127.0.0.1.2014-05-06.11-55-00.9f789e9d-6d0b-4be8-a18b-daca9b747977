(dp1
S'output'
p2
S"<class 'simplejson.scanner.JSONDecodeError'> Expecting value: line 1 column 1 (char 0)"
p3
sS'layer'
p4
S'/Applications/web2py.app/Contents/Resources/applications/fbmayor/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\nfrom facebook import GraphAPI, GraphAPIError\nimport datetime\n\n\n\n@auth.requires_login()\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simple replace the two lines below with:\n    return auth.wiki()\n\n    """\n    pages = fbpl().select(fbpl.page.ALL, orderby=fbpl.page.id)\n    user = auth.user\n    if user:\n        response.flash = T(\'You are %(name)s\', dict(name=user[\'first_name\']))\n        return dict(message=T(\'Hello, Facebook is telling that you are %(first_name)s %(last_name)s\', dict(first_name=user[\'first_name\'], last_name=user[\'last_name\'])),pages=pages)\n    response.flash = T(\'Welcome to web2py\')\n\n    return dict(message=T(\'Hello, please login\'),pages=pages)\n\n#@auth.requires_login()\n\n@auth.requires_login()\ndef display_form():\n    allplaces = SQLFORM.grid(fbpl.place,user_signature=False, create=False, deletable=True, editable=False,paginate=10, maxtextlength = 100, orderby = \'id DESC\')\n\n    return dict(allplaces=allplaces)\n\ndef display_page():\n    #allpages = SQLFORM.grid(fbpl.page,user_signature=False, create=False, deletable=True, editable=False,paginate=10, maxtextlength = 100, orderby = \'id DESC\')\n    allpages= fbpl().select(fbpl.page.ALL, orderby=~fbpl.page.likes_sincelastupdate,limitby=(0, 100))\n    return dict(allpages=allpages)\n\ndef display_people():\n    allpeople = SQLFORM.grid(fbpl.people,user_signature=False, create=False, deletable=True, editable=False,paginate=10, maxtextlength = 100, orderby = \'id DESC\')\n\n    return dict(allpeople=allpeople)\n\ndef display_post():\n    #allposts = SQLFORM.grid(fbpl.post,user_signature=False, create=False, deletable=True, editable=False,paginate=10, maxtextlength = 100, orderby = \'id DESC\')\n    allposts= fbpl(fbpl.post.status_type <> \'\' and fbpl.post.fscore > 0).select(fbpl.post.ALL, orderby=~fbpl.post.fscore,limitby=(0, 1000))\n    return dict(allposts=allposts)\n\ndef display_event():\n    allevents = SQLFORM.grid(fbpl.event,user_signature=False, create=False, deletable=True, editable=False,paginate=10, maxtextlength = 100, orderby = \'id DESC\')\n\n    return dict(allevents=allevents)\n\n\n@auth.requires_login()\ndef addplace():\n    form = FORM(\'Facebook place id or Name\',\n              INPUT(_name=\'placeid\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n        placeid= request.vars[\'placeid\']\n        message = getP(placeid)\n        response.flash = str(message) #\'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill the form\'\n    return dict(form=form)\n\n@auth.requires_login()\ndef addpage():\n    form = FORM(\'Facebook page id or Name\',\n              INPUT(_name=\'pageid\', requires=IS_NOT_EMPTY()), \'\xe8\xab\x8b\xe8\xbc\xb8\xe5\x85\xa5\xe9\x99\xa3\xe7\x87\x9f\',\n              INPUT(_name=\'team\', requires=IS_IN_SET([\'\xe9\x80\xa3\xe5\x8b\x9d\xe6\x96\x87\',\'\xe6\x9f\xaf\xe6\x96\x87\xe5\x93\xb2\',\'\xe4\xb8\x81\xe5\xae\x88\xe4\xb8\xad\',\'\xe9\xa1\xa7\xe7\xab\x8b\xe9\x9b\x84\'])),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n        gid= request.vars[\'pageid\']\n        team =request.vars[\'team\']\n        message = getPage(gid,team)\n        response.flash = str(message) #\'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill the form\'\n    return dict(form=form)\n\n@auth.requires_login()\ndef addpeople():\n    form = FORM(\'Facebook user id or Name\',\n              INPUT(_name=\'uid\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n        gid= request.vars[\'uid\']\n        message = getPeople(gid)\n        response.flash = str(message) #\'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill the form\'\n    return dict(form=form)\n\n@auth.requires_login()\ndef addpost():\n    form = FORM(\'Facebook post id\',\n              INPUT(_name=\'uid\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n        gid= request.vars[\'uid\']\n        message = getPost(gid)\n        response.flash = str(message) #\'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill the form\'\n    return dict(form=form)\n\n@auth.requires_login()\ndef addevent():\n    form = FORM(\'Facebook event id\',\n              INPUT(_name=\'uid\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n        gid= request.vars[\'uid\']\n        message = getEvent(gid)\n        response.flash = str(message) #\'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill the form\'\n    return dict(form=form)\n\n\n@auth.requires_login()\ndef getP(gid):\n    graph = getGraph()\n    try:\n        if gid:\n            fb_obj = graph.get_object(gid)\n            id= fb_obj["id"]\n            row = fbpl.place(placeid=id)\n            if not row:\n                name =  fb_obj["name"]\n                category = fb_obj["category"]\n                category_list =  fb_obj["category_list"]\n                checkins= fb_obj["checkins"]\n                zip= fb_obj["location"]["zip"]\n                latitude= fb_obj["location"]["latitude"]\n                longitude= fb_obj["location"]["longitude"]\n                link= fb_obj["link"]\n                old_ids = \'\'\n                fbpl.place.insert(placeid=id,name = name,latitude=latitude,longitude=longitude,category=category,category_list=category_list,zip=zip,link=link,old_ids=old_ids)\n\n            fbpl.commit()\n            message=\'Successfully adding new place into the database\'\n        else:\n            message=\'failure, please check your placeid!\'\n    except GraphAPIError, e:\n        message=e.result\n        fbpl.graphAPI_Error.insert(placeid=gid,date_time=datetime.datetime.today(),error_msg=message)\n        fbpl.commit()\n    except :\n        message = "unknown error"\n\n    return dict(message=message)\n\n@auth.requires_login()\ndef getPage(gid,team):\n    graph = getGraph()\n    try:\n        if gid:\n            fb_obj = graph.request(gid ,args={\'fields\': \'id, name, category, about, can_post, talking_about_count, were_here_count, link,description, cover, website, picture.type(large), is_published,likes.limit(1).summary(true)\'})\n            id= fb_obj["id"]\n            pageid = fb_obj["id"]\n            name =  fb_obj["name"] if (\'name\' in fb_obj) else \'\'\n            category = fb_obj["category"] if (\'category\' in fb_obj) else \'\'\n            about = fb_obj["about"] if (\'about\' in fb_obj) else \'\'\n            can_post = fb_obj["can_post"] if (\'can_post\' in fb_obj) else \'\'\n            is_published = fb_obj["is_published"] if (\'is_published\' in fb_obj) else \'\'\n            talking_about_count = fb_obj["talking_about_count"] if (\'talking_about_count\' in fb_obj) else 0\n            were_here_count = fb_obj["were_here_count"] if (\'were_here_count\' in fb_obj) else 0\n            link = fb_obj["link"] if (\'link\' in fb_obj) else \'\'\n            likes = fb_obj["likes"] if (\'likes\' in fb_obj) else \'\'\n            description = fb_obj["description"] if (\'description\' in fb_obj) else \'\'                \n            cover_id = fb_obj["cover"]["cover_id"] if (\'cover\' in fb_obj) else \'\'\n            source = fb_obj["cover"]["source"] if (\'cover\' in fb_obj) else \'\'\n            picture = fb_obj["picture"]["data"]["url"] if (\'picture\' in fb_obj) else \'\'\n            team=team    \n            website = fb_obj["website"] if (\'website\' in fb_obj) else \'\'\n            row = fbpl(fbpl.page.pageid==id).select().first()\n            if row :\n                row.update_record(name=name, category=category, about=about, can_post=can_post, is_published=is_published, link=link, description=description, cover_id=cover_id, source=source,website=website,talking_about_count=talking_about_count,were_here_count=were_here_count,picture=picture,team=team)\n            else:\n                fbpl.page.insert(pageid=pageid,name=name, category=category, about=about, can_post=can_post, is_published=is_published, link=link, description=description, cover_id=cover_id, source=source,website=website,talking_about_count=talking_about_count,were_here_count=were_here_count,picture=picture,team=team)\n            fbpl.commit()\n            message=\'Successfully adding new page into the database\'\n        else:\n            message=\'failure, please check your pageid!\'\n    except GraphAPIError, e:\n        message=e.result\n        fbpl.graphAPI_Error.insert(placeid=gid,date_time=datetime.datetime.today(),error_msg=message)\n        fbpl.commit()\n\n\n    return dict(message=message)\n\n@auth.requires_login()\ndef getPost(gid):\n    graph = getGraph()\n    try:\n        if gid:       \n            fb_obj = graph.request(gid,args={\'fields\': \'id, message, updated_time, from, created_time, status_type, type, link, likes.limit(1).summary(true), shares, comments.limit(1).summary(true), object_id, picture\'})\n            fid= fb_obj["id"]\n            message =  fb_obj["message"] if (\'message\' in fb_obj) else \'\'\n            updated_time = fb_obj["updated_time"] if (\'updated_time\' in fb_obj) else 0\n            from_id = fb_obj["from"]["id"] if (\'from\' in fb_obj) else \'\'\n            from_name = fb_obj["from"]["name"] if (\'from\' in fb_obj) else \'\'\n            created_time = fb_obj["created_time"] if (\'created_time\' in fb_obj) else \'\'\n            status_type = fb_obj["status_type"] if (\'status_type\' in fb_obj) else \'\'\n            ptype = fb_obj["type"] if (\'type\' in fb_obj) else \'\'\n            status_type = fb_obj["status_type"] if (\'status_type\' in fb_obj) else \'\'\n            link =  fb_obj["link"] if (\'link\' in fb_obj) else \'\'\n            picture =  fb_obj["picture"] if (\'picture\' in fb_obj) else \'\'\n            shares_count = fb_obj["shares"][\'count\'] if (\'shares\' in fb_obj) else 0\n            likes_count = fb_obj["likes"]["summary"]["total_count"] if (\'summary\' in fb_obj) else 0\n            comment_count = fb_obj["comments"]["summary"]["total_count"] if (\'summary\' in fb_obj) else 0\n            object_id = fb_obj["object_id"] if (\'object_id\' in fb_obj) else \'\'\n            row=fbpl(fbpl.page.pageid==from_id).select().first()\n            team = row[\'team\']\n            row = fbpl(fbpl.post.fid==from_id).select().first()\n            if row:\n                row.update_record(fid=fid, message=message,from_id=from_id, from_name=from_name, created_time=created_time,object_id=object_id,ptype=ptype,status_type=status_type, link=link, picture=picture ,shares_count=shares_count,likes_count=likes_count,comment_count=comment_count,team=team, updated_time=updated_time)\n            else:\n                fbpl.post.insert(fid=fid, message=message,from_id=from_id, from_name=from_name, created_time=created_time,object_id=object_id,ptype=ptype,status_type=status_type, link=link, picture=picture ,shares_count=shares_count,likes_count=likes_count,comment_count=comment_count,team=team, updated_time=updated_time)\n                fbpl.commit()\n            message=\'Successfully adding new post into the database\'            \n        else:\n            message=\'failure, please check your postid!\'       \n    except GraphAPIError, e:\n        message=e.result\n        fbpl.graphAPI_Error.insert(placeid=gid,date_time=datetime.datetime.today(),error_msg=message)\n        fbpl.commit() \n    \n    \n    return dict(message=message) \n\n\n\n@auth.requires_login()\ndef getPeople(gid):\n    graph = getGraph()\n    try:\n        if gid:       \n            fb_obj = graph.get_object(gid)\n            id= fb_obj["id"]\n            row = fbpl.people(uid=id)\n            if not row: \n                uid = fb_obj["id"]\n                name =  fb_obj["name"] if (\'name\' in fb_obj) else \'\'\n                gender = fb_obj["gender"] if (\'gender\' in fb_obj) else \'\'\n                hometown = fb_obj["hometown"] if (\'hometown\' in fb_obj) else \'\'\n                loc_id = fb_obj["location"]["id"] if (\'location\' in fb_obj) else \'\'\n                loc_name = fb_obj["location"]["name"] if (\'location\' in fb_obj) else \'\'\n                updated_time = fb_obj["updated_time"] if (\'updated_time\' in fb_obj) else \'\'\n                locale = fb_obj["locale"] if (\'locale\' in fb_obj) else \'\'\n                fbpl.people.insert(uid=uid, name=name, gender=gender, hometown=hometown, loc_id=loc_id, loc_name=loc_name, updated_time=updated_time, locale=locale)\n            \n            fbpl.commit()\n            message=\'Successfully adding new people into the database\'            \n        else:\n            message=\'failure, please check your userid!\'       \n    except GraphAPIError, e:\n        message=e.result\n        fbpl.graphAPI_Error.insert(placeid=gid,date_time=datetime.datetime.today(),error_msg=message)\n        fbpl.commit() \n    \n    \n    return dict(message=message) \n\n@auth.requires_login()\ndef getEvent(eid):\n    graph = getGraph()\n    event= graph.get_object(eid)\n    eventid = event["id"] if \'id\' in event else \'\'\n    row = fbpl.event(eventid=eventid)\n    try:\n        description = event["description"] if \'description\' in event else \'\'\n        end_time  = event["end_time"] if \'end_time\' in event else \'\'\n        timezone = event["timezone"] if \'timezone\' in event else \'\'\n        name = event["name"] if \'name\' in event else \'\'\n        location = event["location"] if \'location\' in event else \'\'\n        ownerid = event["owner"]["id"] if \'owner\' in event else \'\'\n        ownername = event["owner"]["name"] if \'owner\' in event else \'\'\n        picture = event["picture"] if \'picture\' in event else \'\'\n        privacy = event["privacy"] if \'privacy\' in event else \'\'\n        start_time = event["start_time"] if \'start_time\' in event else \'\'\n        ticket_uri = event["ticket_uri"] if \'ticket_uri\' in event else \'\'\n        updated_time = event["updated_time"] if \'updated_time\' in event else \'\'\n        is_date_only  = event["is_date_only"] if \'is_date_only\' in event else \'\'\n        if \'venue\' in event:\n            venueid  = event["venue"]["id"] if \'id\' in event["venue"] else \'\'\n            venuename = event["venue"]["name"] if \'name\' in event["venue"] else \'\'\n            country = event["venue"]["country"] if \'country\' in event["venue"] else \'\'\n            city = event["venue"]["city"] if \'city\' in event["venue"] else \'\'\n            state  = event["venue"]["state"] if \'state\' in event["venue"] else \'\'\n            street = event["venue"]["street"] if \'street\' in event["venue"] else \'\'\n            zipcode = event["venue"]["zip"] if \'zip\' in event["venue"] else \'\'\n            longitude = event["venue"]["longitude"] if \'longitude\' in event["venue"] else \'\'\n            latitude  = event["venue"]["latitude"] if \'latitude\' in event["venue"] else \'\'        \n        if not row:\n            fbpl.event.insert(eventid=eventid, description=description, end_time=end_time, timezone=timezone, name=name, location=location, ownerid=ownerid, ownername= ownername, picture=picture, privacy=privacy, start_time=start_time, ticket_uri=ticket_uri, updated_time=updated_time, is_date_only=is_date_only, venuename=venuename, venueid=venueid, country=country, city=city, state=state, street=street, zipcode=zipcode, longitude=longitude, latitude=latitude)\n            fbpl.commit()\n            message=\'Successfully adding new event into the database\'    \n        else:\n            row.update_record(eventid=eventid, description=description, end_time=end_time, timezone=timezone, name=name, location=location, ownerid=ownerid, ownername= ownername, picture=picture, privacy=privacy, start_time=start_time, ticket_uri=ticket_uri, updated_time=updated_time, is_date_only=is_date_only, venuename=venuename, venueid=venueid, country=country, city=city, state=state, street=street, zipcode=zipcode, longitude=longitude, latitude=latitude)\n            message=\'Successfully updated new event into the database\'       \n    except GraphAPIError, e:\n        message=e.result\n        fbpl.graphAPI_Error.insert(placeid=gid,date_time=datetime.datetime.today(),error_msg=message)\n        fbpl.commit() \n    \n    \n    return dict(message=message) \n\n@auth.requires_login()\ndef social_counts_pages():\n    from datetime import datetime ,date\n    from time import strptime\n    from dateutil.relativedelta import relativedelta\n\n    pageid = request.args(0)  or redirect(URL(\'index\'))\n    pagename = fbpl(fbpl.page.pageid== pageid).select()[0].name\n\n    #social_counts = fbpl(fbpl.social_counts.placeid== placeid).select()\n    query = fbpl.social_counts.placeid == pageid\n    #social_counts = SQLFORM.smartgrid(fbpl.social_counts,constraints = {\'social_counts\':query},user_signature=False, create=False, deletable=False, editable=False, maxtextlength = 240)\n    social_counts = SQLFORM.grid(query,fbpl.social_counts,user_signature=False, create=False, deletable=False, editable=False,paginate=240, maxtextlength = 240, orderby = \'id DESC\')\n    first_rec = fbpl(fbpl.social_counts.placeid== pageid).select(fbpl.social_counts.ALL,limitby=(0, 2)).first().date_time\n    year = first_rec.year\n    month = first_rec.month\n    dt = datetime.now()\n    year2 = dt.year\n    month2 = dt.month\n    dtlist = []\n    while (year <= year2) :\n        if (year == year2):\n            if (month <= month2):\n                m_str = \'0\' + str(month) if month < 10 else str(month)\n                dtlist.append(str(year) + \'-\' + str(m_str))\n        else:\n            dtlist.append(str(year) + \'-\' + str(month))\n        first_rec = first_rec + relativedelta(months = 1)\n        year = first_rec.year\n        month = first_rec.month\n    return dict(social_counts=social_counts, pagename=pagename,dtlist=dtlist,pageid=pageid)\n\n@auth.requires_login()\ndef social_counts():\n    from datetime import datetime ,date\n    from time import strptime\n    from dateutil.relativedelta import relativedelta\n\n    placeid = request.args(0)  or redirect(URL(\'index\'))\n    placename = fbpl(fbpl.place.placeid== placeid).select()[0].name\n\n    #social_counts = fbpl(fbpl.social_counts.placeid== placeid).select()\n    query = fbpl.social_counts.placeid == placeid\n    #social_counts = SQLFORM.smartgrid(fbpl.social_counts,constraints = {\'social_counts\':query},user_signature=False, create=False, deletable=False, editable=False, maxtextlength = 240)\n    social_counts = SQLFORM.grid(query,fbpl.social_counts,user_signature=False, create=False, deletable=False, editable=False,paginate=240, maxtextlength = 240, orderby = \'id DESC\')\n    first_rec = fbpl(fbpl.social_counts.placeid== placeid).select(fbpl.social_counts.ALL,limitby=(0, 2)).first().date_time\n    year = first_rec.year\n    month = first_rec.month\n    dt = datetime.now()\n    year2 = dt.year\n    month2 = dt.month\n    dtlist = []\n    while (year <= year2) :\n        if (year == year2):\n            if (month <= month2):\n                m_str = \'0\' + str(month) if month < 10 else str(month)\n                dtlist.append(str(year) + \'-\' + str(m_str))\n        else:\n            dtlist.append(str(year) + \'-\' + str(month))\n        first_rec = first_rec + relativedelta(months = 1)\n        year = first_rec.year\n        month = first_rec.month\n    latitude =  fbpl(fbpl.place.placeid== placeid).select().first().latitude\n    longitude =  fbpl(fbpl.place.placeid== placeid).select().first().longitude\n    return dict(social_counts=social_counts, placename=placename,latitude=latitude,longitude=longitude,dtlist=dtlist,placeid=placeid)\n\n@auth.requires_login()\ndef social_counts_month():\n    from datetime import datetime ,date\n    pageid = request.args(0) or redirect(URL(\'index\'))\n    pagename = fbpl(fbpl.page.pageid== pageid).select()[0].name\n    year = request.args(1).split(\'-\')[0]\n    month = request.args(1).split(\'-\')[1]\n    from_date = datetime.strptime(str(year) + \'-\'+ str(month) +\'-01 00:00:00\',\'%Y-%m-%d %H:%M:%S\')\n    month2 = int(month) +1 if int(month) < 12 else 1\n    year2 = int(year) if int(month) < 12 else int(year)+1\n    to_date = datetime.strptime(str(year2) + \'-\'+ str(month2) +\'-01 00:00:00\',\'%Y-%m-%d %H:%M:%S\')\n    pagename = fbpl(fbpl.page.pageid== pageid).select()[0].name\n    #rec = fbpl.social_counts.placeid == placeid\n    #rec1= fbpl.social_counts.date_time >= from_date\n    #rec2= fbpl.social_counts.date_time < to_date\n    #constraints = {\'social_counts\':rec & rec1 & rec2}\n    rows = fbpl((fbpl.social_counts.placeid == pageid) & (fbpl.social_counts.date_time >= from_date) & (fbpl.social_counts.date_time < to_date)).select()\n    #social_counts = SQLFORM.smartgrid(fbpl.social_counts,constraints = constraints,args=[request.args(0),request.args(1)],user_signature=False, create=False, deletable=False, editable=False,paginate=240, maxtextlength = 240, orderby = \'id DESC\')\n    return dict(pagename=pagename,date = request.args(1),rows=rows)\n\n@auth.requires_login()\ndef social_countsall_month():\n    from datetime import datetime ,date\n    year = request.args(0).split(\'-\')[0]\n    month = request.args(0).split(\'-\')[1]\n    from_date = datetime.strptime(str(year) + \'-\'+ str(month) +\'-01 00:00:00\',\'%Y-%m-%d %H:%M:%S\')\n    month2 = int(month) +1 if int(month) < 12 else 1\n    year2 = int(year) if int(month) < 12 else int(year)+1\n    to_date = datetime.strptime(str(year2) + \'-\'+ str(month2) +\'-01 00:00:00\',\'%Y-%m-%d %H:%M:%S\')\n    rows = fbpl((fbpl.social_counts.date_time >= from_date) & (fbpl.social_counts.date_time < to_date)).select()\n    #query = ( fbpl.social_counts.date_time >= from_date) & (fbpl.social_counts.date_time < to_date)\n    #social_counts = SQLFORM.grid(query,fbpl.social_counts,user_signature=False, create=False, deletable=False, editable=False,paginate=240, maxtextlength = 240, orderby = \'id DESC\')\n    return dict(date=request.args(0),rows=rows)\n\n@auth.requires_login()\ndef social_counts_all():\n    from datetime import datetime ,date\n    from time import strptime\n    from dateutil.relativedelta import relativedelta\n    first_rec = fbpl().select(fbpl.social_counts.ALL,limitby=(0, 2)).first().date_time\n    year = first_rec.year\n    month = first_rec.month\n    dt = datetime.now()\n    year2 = dt.year\n    month2 = dt.month\n    dtlist = []\n    while (year <= year2) :\n        if (year == year2):\n            if (month <= month2):\n                m_str = \'0\' + str(month) if month < 10 else str(month)\n                dtlist.append(str(year) + \'-\' + str(m_str))\n        else:\n            dtlist.append(str(year) + \'-\' + str(month))\n        first_rec = first_rec + relativedelta(months = 1)\n        year = first_rec.year\n        month = first_rec.month\n    social_counts = SQLFORM.grid(fbpl.social_counts,user_signature=False, create=False, deletable=False, editable=False,paginate=100, maxtextlength = 240, orderby = \'id DESC\')\n    return dict(social_counts=social_counts,dtlist=dtlist)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(user)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'simplejson.scanner'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of JSONDecodeError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of JSONDecodeError object>"
p17
sS'__reduce__'
p18
S"<bound method JSONDecodeError.__reduce__ of JSON...or('Expecting value: line 1 column 1 (char 0)',)>"
p19
sS'pos'
p20
S'0'
sS'endlineno'
p21
S'None'
p22
sS'__dict__'
p23
S'{\'colno\': 1, \'doc\': \'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\', \'end\': None, \'endcolno\': None, \'endlineno\': None, \'lineno\': 1, \'msg\': \'Expecting value\', \'pos\': 0}'
p24
sS'__sizeof__'
p25
S'<built-in method __sizeof__ of JSONDecodeError object>'
p26
sS'__weakref__'
p27
S'None'
p28
sS'__init__'
p29
S"<bound method JSONDecodeError.__init__ of JSONDe...or('Expecting value: line 1 column 1 (char 0)',)>"
p30
sS'__setattr__'
p31
S"<method-wrapper '__setattr__' of JSONDecodeError object>"
p32
sS'__reduce_ex__'
p33
S'<built-in method __reduce_ex__ of JSONDecodeError object>'
p34
sS'end'
p35
S'None'
p36
sS'__new__'
p37
S'<built-in method __new__ of type object>'
p38
sS'__format__'
p39
S'<built-in method __format__ of JSONDecodeError object>'
p40
sS'__class__'
p41
S"<class 'simplejson.scanner.JSONDecodeError'>"
p42
sS'lineno'
p43
S'1'
sS'msg'
p44
S"'Expecting value'"
p45
sS'__doc__'
p46
S"'Subclass of ValueError with the following additi...e column corresponding to end (may be None)\\n\\n    '"
p47
sS'__getitem__'
p48
S"<method-wrapper '__getitem__' of JSONDecodeError object>"
p49
sS'__setstate__'
p50
S'<built-in method __setstate__ of JSONDecodeError object>'
p51
sS'__getattribute__'
p52
S"<method-wrapper '__getattribute__' of JSONDecodeError object>"
p53
sS'args'
p54
S"('Expecting value: line 1 column 1 (char 0)',)"
p55
sS'__subclasshook__'
p56
S'<built-in method __subclasshook__ of type object>'
p57
sS'colno'
p58
S'1'
sS'__unicode__'
p59
S'<built-in method __unicode__ of JSONDecodeError object>'
p60
sS'doc'
p61
S'\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\''
p62
sS'endcolno'
p63
S'None'
p64
sS'__delattr__'
p65
S"<method-wrapper '__delattr__' of JSONDecodeError object>"
p66
sS'__repr__'
p67
S"<method-wrapper '__repr__' of JSONDecodeError object>"
p68
sS'__hash__'
p69
S"<method-wrapper '__hash__' of JSONDecodeError object>"
p70
ssS'evalue'
p71
S'Expecting value: line 1 column 1 (char 0)'
p72
sS'request'
p73
cgluon.html
XML_unpickle
p74
(S's\xd2[\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>fbmayor</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>login</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-72f49833-a10c-4cfe-aca2-b0ede0835693<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_fbmayor</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4374976c-1eea-4d03-8559-0ef01c907d3d<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-bdfa8c55-b457-4373-8f26-ebfba5ca9371<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_admin=127.0.0.1-72f49833-a10c-4cfe-aca2-b0ede0835693; session_id_fbmayor=127.0.0.1-4374976c-1eea-4d03-8559-0ef01c907d3d; session_id_welcome=127.0.0.1-bdfa8c55-b457-4373-8f26-ebfba5ca9371</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/537.75.14</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/fbmayor/default/user/login</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>_next=/fbmayor/graphAPI/countAllPageSocialCount</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>64956</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>maclogair.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Applications/web2py.app/Contents/Resources/applications/fbmayor/&#x27;, &#x27;/Applications/web2py.app/Contents/Resources/applications/fb_event/&#x27;, &#x27;/Applications/web2py.app/Contents/Resources/applications/admin/&#x27;, &#x27;/Applications/web2py.app/Contents/Resources/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Applications/web2py.app/Contents/Resources</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x104201d40: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::60c:ceff:fee3:df4a%en0&#x27;, &#x27;192.168.100.4&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;maclogair.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Applications/web2py.app/Contents/Resources&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Applications/web2py.app/Contents/Resources</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_admin=127.0.0.1-72f49833-a10c-4cfe-aca2-b0ede0835693; session_id_fbmayor=127.0.0.1-4374976c-1eea-4d03-8559-0ef01c907d3d; session_id_welcome=127.0.0.1-bdfa8c55-b457-4373-8f26-ebfba5ca9371</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/537.75.14</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>192.168.100.4</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>fe80::60c:ceff:fee3:df4a%en0</div></td></tr><tr><td><div>maclogair.local</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/fbmayor/default/user/login</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>_next=/fbmayor/graphAPI/countAllPageSocialCount</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>64956</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/fbmayor/default/user/login?_next=/fbmayor/graphAPI/countAllPageSocialCount</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>maclogair.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8088</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/Applications/web2py.app/Contents/Resources</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2013.11.28.13.54.07</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x10028b1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x1041be328&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x10d25e050&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x10028b1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x1041be328&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x10d25e050&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/Applications/web2py.app/Contents/Resources/applications/fbmayor/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Applications/web2py.app/Contents/Resources/applications/fbmayor/&#x27;, &#x27;/Applications/web2py.app/Contents/Resources/applications/fb_event/&#x27;, &#x27;/Applications/web2py.app/Contents/Resources/applications/admin/&#x27;, &#x27;/Applications/web2py.app/Contents/Resources/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Applications/web2py.app/Contents/Resources</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x104201d40: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::60c:ceff:fee3:df4a%en0&#x27;, &#x27;192.168.100.4&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;maclogair.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Applications/web2py.app/Contents/Resources&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Applications/web2py.app/Contents/Resources</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>192.168.100.4</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>fe80::60c:ceff:fee3:df4a%en0</div></td></tr><tr><td><div>maclogair.local</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.8.2-stable+timestamp.2013.11.28.13.54.07</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 5, 6, 11, 55, 0, 685585)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div>login</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/fbmayor/default/user/login</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 5, 6, 3, 55, 0, 685593)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>fbmayor/127.0.0.1.2014-05-06.11-55-00.9f789e9d-6d0b-4be8-a18b-daca9b747977</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x10d4a0c10&gt;</div></td></tr></table></div>'
tRp75
sS'frames'
p76
(lp77
(dp78
S'file'
p79
S'/Applications/web2py.app/Contents/Resources/gluon/restricted.py'
p80
sS'dump'
p81
(dp82
S'environment'
p83
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p84
sS'ccode'
p85
S'<code object <module> at 0x10dbb4e30, file "/App...cations/fbmayor/controllers/default.py", line 12>'
p86
ssS'lnum'
p87
I217
sS'lines'
p88
(dp89
I212
S'    try:'
p90
sI213
S'        if isinstance(code, types.CodeType):'
p91
sI214
S'            ccode = code'
p92
sI215
S'        else:'
p93
sI216
S'            ccode = compile2(code, layer)'
p94
sI217
S'        exec ccode in environment'
p95
sI218
S'    except HTTP:'
p96
sI219
S'        raise'
p97
sI220
S'    except RestrictedError:'
p98
sI221
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p99
ssS'call'
p100
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...m=crud())\\n\\nresponse._vars=response._caller(user)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, layer='/Applications/web2py.app/Contents/Resources/applications/fbmayor/controllers/default.py')"
p101
sS'func'
p102
S'restricted'
p103
sa(dp104
g79
S'/Applications/web2py.app/Contents/Resources/applications/fbmayor/controllers/default.py'
p105
sg81
(dp106
sg87
I513
sg88
(dp107
I502
S'    http://..../[app]/default/data/update/[table]/[id]'
p108
sI503
S'    http://..../[app]/default/data/delete/[table]/[id]'
p109
sI504
S'    http://..../[app]/default/data/select/[table]'
p110
sI505
S'    http://..../[app]/default/data/search/[table]'
p111
sI506
S'    but URLs must be signed, i.e. linked with'
p112
sI507
S"      A('table',_href=URL('data/tables',user_signature=True))"
p113
sI508
S'    or with the signed load operator'
p114
sI509
S"      LOAD('default','data.load',args='tables',ajax=True,user_signature=True)"
p115
sI510
S'    """'
p116
sI511
S'    return dict(form=crud())'
p117
ssg100
S'()'
p118
sg102
S'<module>'
p119
sa(dp120
g79
S'/Applications/web2py.app/Contents/Resources/gluon/globals.py'
p121
sg81
(dp122
S'self'
p123
S'undefined'
p124
sS'f'
S'<function user>'
p125
ssg87
I372
sg88
(dp126
I367
S'        self.menu = []             # used by the default view layout'
p127
sI368
S'        self.files = []            # used by web2py_ajax.html'
p128
sI369
S'        self.generic_patterns = []  # patterns to allow generic views'
p129
sI370
S"        self.delimiters = ('{{', '}}')"
p130
sI371
S'        self._vars = None'
p131
sI372
S'        self._caller = lambda f: f()'
p132
sI373
S'        self._view_environment = None'
p133
sI374
S'        self._custom_commit = None'
p134
sI375
S'        self._custom_rollback = None'
p135
sI376
S''
ssg100
S'(f=<function user>)'
p136
sg102
S'<lambda>'
p137
sa(dp138
g79
S'/Applications/web2py.app/Contents/Resources/applications/fbmayor/controllers/default.py'
p139
sg81
(dp140
S'global auth'
p141
S'<gluon.tools.Auth object>'
p142
sS'form'
p143
g124
sS'builtindict'
p144
S"<type 'dict'>"
p145
ssg87
I475
sg88
(dp146
I470
S'    use @auth.requires_login()'
p147
sI471
S"        @auth.requires_membership('group name')"
p148
sI472
S"        @auth.requires_permission('read','table name',record_id)"
p149
sI473
S'    to decorate functions that need access control'
p150
sI474
S'    """'
p151
sI475
S'    return dict(form=auth())'
p152
sI476
S''
sI477
S'@cache.action()'
p153
sI478
S'def download():'
p154
sI479
S'    """'
p155
ssg100
S'()'
p156
sg102
S'user'
p157
sa(dp158
g79
S'/Applications/web2py.app/Contents/Resources/gluon/tools.py'
p159
sg81
(dp160
S'self'
p161
S'<gluon.tools.Auth object>'
p162
sS'args'
p163
S"['login']"
p164
sS'builtingetattr'
p165
S'<built-in function getattr>'
p166
ssg87
I1303
sg88
(dp167
I1298
S"                       'change_password', 'profile', 'groups',"
p168
sI1299
S"                       'impersonate', 'not_authorized'):"
p169
sI1300
S"            if len(request.args) >= 2 and args[0] == 'impersonate':"
p170
sI1301
S'                return getattr(self, args[0])(request.args[1])'
p171
sI1302
S'            else:'
p172
sI1303
S'                return getattr(self, args[0])()'
p173
sI1304
S"        elif args[0] == 'cas' and not self.settings.cas_provider:"
p174
sI1305
S"            if args(1) == self.settings.cas_actions['login']:"
p175
sI1306
S'                return self.cas_login(version=2)'
p176
sI1307
S"            elif args(1) == self.settings.cas_actions['validate']:"
p177
ssg100
S'(self=<gluon.tools.Auth object>)'
p178
sg102
S'__call__'
p179
sa(dp180
g79
S'/Applications/web2py.app/Contents/Resources/gluon/tools.py'
p181
sg81
(dp182
S'cas'
p183
S'<__restricted__.FaceBookAccount object>'
p184
sS'cas.get_user'
p185
S'<bound method FaceBookAccount.get_user of <__restricted__.FaceBookAccount object>>'
p186
sS'cas_user'
p187
g124
ssg87
I2357
sg88
(dp188
I2352
S'                        client_side=settings.client_side)'
p189
sI2353
S''
sI2354
S'        else:'
p190
sI2355
S'            # use a central authentication server'
p191
sI2356
S'            cas = settings.login_form'
p192
sI2357
S'            cas_user = cas.get_user()'
p193
sI2358
S''
sI2359
S'            if cas_user:'
p194
sI2360
S'                cas_user[passfield] = None'
p195
sI2361
S'                user = self.get_or_create_user('
p196
ssg100
S"(self=<gluon.tools.Auth object>, next='/fbmayor/graphAPI/countAllPageSocialCount', onvalidation=[], onaccept=[], log='User %(id)s Logged-in')"
p197
sg102
S'login'
p198
sa(dp199
g79
S'/Applications/web2py.app/Contents/Resources/applications/fbmayor/models/db.py'
p200
sg81
(dp201
S'self'
p202
S'<__restricted__.FaceBookAccount object>'
p203
sS'self.graph'
p204
S'<facebook.GraphAPI object>'
p205
sS'global user'
p206
S'<function user>'
p207
sS'self.graph.get_object'
p208
S'<bound method GraphAPI.get_object of <facebook.GraphAPI object>>'
p209
ssg87
I94
sg88
(dp210
I96
S"                        last_name = user['last_name'],"
p211
sI97
S"                        username = user['id'])"
p212
sI98
S'        except GraphAPIError:'
p213
sI89
S'        if not self.accessToken():'
p214
sI90
S'            return None'
p215
sI91
S'        if not self.graph:'
p216
sI92
S'            self.graph = GraphAPI((self.accessToken()))'
p217
sI93
S'        try:'
p218
sI94
S'            user = self.graph.get_object("me")'
p219
sI95
S"            return dict(first_name = user['first_name'],"
p220
ssg100
S'(self=<__restricted__.FaceBookAccount object>)'
p221
sg102
S'get_user'
p222
sa(dp223
g79
S'/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/facebook.py'
p224
sg81
(dp225
S'self'
p226
S'<facebook.GraphAPI object>'
p227
sS'self.request'
p228
S'<bound method GraphAPI.request of <facebook.GraphAPI object>>'
p229
sS'id'
p230
S"'me'"
p231
sS'args'
p232
S'{}'
p233
ssg87
I99
sg88
(dp234
I96
S''
sI97
S'    def get_object(self, id, **args):'
p235
sI98
S'        """Fetchs the given object from the graph."""'
p236
sI99
S'        return self.request(id, args)'
p237
sI100
S''
sI101
S'    def get_objects(self, ids, **args):'
p238
sI102
S'        """Fetchs all of the given object from the graph.'
p239
sI103
S''
sI94
S'        self.access_token = access_token'
p240
sI95
S'        self.timeout = timeout'
p241
ssg100
S"(self=<facebook.GraphAPI object>, id='me', **args={})"
p242
sg102
S'get_object'
p243
sa(dp244
g79
S'/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/facebook.py'
p245
sg81
(dp246
S'file'
p247
S'<addinfourl at 4515579736 whose fp = None>'
p248
sS'response'
p249
g124
sS'global _parse_json'
p250
S'<function loads>'
p251
sS'file.read'
p252
S'None'
p253
ssg87
I308
sg88
(dp254
I303
S'            file = urllib2.urlopen("https://graph.facebook.com/" + path + "?" +'
p255
sI304
S'                                   urllib.urlencode(args), post_data)'
p256
sI305
S'        try:'
p257
sI306
S'            fileInfo = file.info()'
p258
sI307
S"            if fileInfo.maintype == 'text':"
p259
sI308
S'                response = _parse_json(file.read())'
p260
sI309
S"            elif fileInfo.maintype == 'image':"
p261
sI310
S"                mimetype = fileInfo['content-type']"
p262
sI311
S'                response = {'
p263
sI312
S'                    "data": file.read(),'
p264
ssg100
S"(self=<facebook.GraphAPI object>, path='me', args={'access_token': 'CAADSl0gHeTUBAMlUxjTcBCIJVHbMMCzs2WoJiJklu96SA9v...WL5nnbbMOqZCKZABXOjGY8PrN1lF493cGeZAus56QbG0KwZAm'}, post_args=None)"
p265
sg102
g73
sa(dp266
g79
S'/Library/Python/2.7/site-packages/simplejson/__init__.py'
p267
sg81
(dp268
S's'
S'\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\''
p269
sS'global _default_decoder'
p270
S'<simplejson.decoder.JSONDecoder object>'
p271
sS'_default_decoder.decode'
p272
S'<bound method JSONDecoder.decode of <simplejson.decoder.JSONDecoder object>>'
p273
ssg87
I488
sg88
(dp274
I483
S'    """'
p275
sI484
S'    if (cls is None and encoding is None and object_hook is None and'
p276
sI485
S'            parse_int is None and parse_float is None and'
p277
sI486
S'            parse_constant is None and object_pairs_hook is None'
p278
sI487
S'            and not use_decimal and not kw):'
p279
sI488
S'        return _default_decoder.decode(s)'
p280
sI489
S'    if cls is None:'
p281
sI490
S'        cls = JSONDecoder'
p282
sI491
S'    if object_hook is not None:'
p283
sI492
S"        kw['object_hook'] = object_hook"
p284
ssg100
S'(s=\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\', encoding=None, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, use_decimal=False, **kw={})'
p285
sg102
S'loads'
p286
sa(dp287
g79
S'/Library/Python/2.7/site-packages/simplejson/decoder.py'
p288
sg81
(dp289
S'self.raw_decode'
p290
S'<bound method JSONDecoder.raw_decode of <simplejson.decoder.JSONDecoder object>>'
p291
sS'end'
p292
g124
sS'self'
p293
S'<simplejson.decoder.JSONDecoder object>'
p294
sS'obj'
p295
g124
sS's'
S'\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\''
p296
ssg87
I370
sg88
(dp297
I365
S'        instance containing a JSON document)'
p298
sI366
S''
sI367
S'        """'
p299
sI368
S'        if _PY3 and isinstance(s, binary_type):'
p300
sI369
S'            s = s.decode(self.encoding)'
p301
sI370
S'        obj, end = self.raw_decode(s)'
p302
sI371
S'        end = _w(s, end).end()'
p303
sI372
S'        if end != len(s):'
p304
sI373
S'            raise JSONDecodeError("Extra data", s, end, len(s))'
p305
sI374
S'        return obj'
p306
ssg100
S'(self=<simplejson.decoder.JSONDecoder object>, s=\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\', _w=<built-in method match of _sre.SRE_Pattern object>, _PY3=False)'
p307
sg102
S'decode'
p308
sa(dp309
g79
S'/Library/Python/2.7/site-packages/simplejson/decoder.py'
p310
sg81
(dp311
S').end'
p312
g124
sS'idx'
p313
S'0'
sS'_w'
p314
S'<built-in method match of _sre.SRE_Pattern object>'
p315
sS'self'
p316
S'<simplejson.decoder.JSONDecoder object>'
p317
sS's'
S'\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\''
p318
sS'self.scan_once'
p319
S'<function scan_once>'
p320
ssg87
I389
sg88
(dp321
I384
S'        have extraneous data at the end.'
p322
sI385
S''
sI386
S'        """'
p323
sI387
S'        if _PY3 and not isinstance(s, text_type):'
p324
sI388
S'            raise TypeError("Input string must be text, not bytes")'
p325
sI389
S'        return self.scan_once(s, idx=_w(s, idx).end())'
p326
sI380
S'        Optionally, ``idx`` can be used to specify an offset in ``s`` where'
p327
sI381
S'        the JSON document begins.'
p328
sI382
S''
sI383
S'        This can be used to decode a JSON document from a string that may'
p329
ssg100
S'(self=<simplejson.decoder.JSONDecoder object>, s=\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\', idx=0, _w=<built-in method match of _sre.SRE_Pattern object>, _PY3=False)'
p330
sg102
S'raw_decode'
p331
sa(dp332
g79
S'/Library/Python/2.7/site-packages/simplejson/scanner.py'
p333
sg81
(dp334
S'idx'
p335
S'0'
sS'string'
p336
S'\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\''
p337
sS'_scan_once'
p338
S'<function _scan_once>'
p339
ssg87
I122
sg88
(dp340
I117
S'        else:'
p341
sI118
S'            raise JSONDecodeError(errmsg, string, idx)'
p342
sI119
S''
sI120
S'    def scan_once(string, idx):'
p343
sI121
S'        try:'
p344
sI122
S'            return _scan_once(string, idx)'
p345
sI123
S'        finally:'
p346
sI124
S'            memo.clear()'
p347
sI125
S''
sI126
S'    return scan_once'
p348
ssg100
S'(string=\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\', idx=0)'
p349
sg102
S'scan_once'
p350
sa(dp351
g79
S'/Library/Python/2.7/site-packages/simplejson/scanner.py'
p352
sg81
(dp353
S'idx'
p354
S'0'
sS'global JSONDecodeError'
p355
S"<class 'simplejson.scanner.JSONDecodeError'>"
p356
sS'errmsg'
p357
S"'Expecting value'"
p358
sS'string'
p359
S'\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\''
p360
ssg87
I118
sg88
(dp361
I113
S"        elif nextchar == 'I' and string[idx:idx + 8] == 'Infinity':"
p362
sI114
S"            return parse_constant('Infinity'), idx + 8"
p363
sI115
S"        elif nextchar == '-' and string[idx:idx + 9] == '-Infinity':"
p364
sI116
S"            return parse_constant('-Infinity'), idx + 9"
p365
sI117
S'        else:'
p366
sI118
S'            raise JSONDecodeError(errmsg, string, idx)'
p367
sI119
S''
sI120
S'    def scan_once(string, idx):'
p368
sI121
S'        try:'
p369
sI122
S'            return _scan_once(string, idx)'
p370
ssg100
S'(string=\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\', idx=0)'
p371
sg102
S'_scan_once'
p372
sasS'pyver'
p373
S'Python 2.7.5: /Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python (prefix: /Library/Frameworks/Python.framework/Versions/2.7)'
p374
sS'session'
p375
g74
(S's\xa8\x03\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">redirect_uri</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8088/fbmayor/default/user/login</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">token</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">access_token</td><td style="vertical-align:top;">:</td><td><div>CAADSl0gHeTUBAMlUxjTcBCIJVHbMMCzs2WoJiJklu96SA9vvsLE5FKI4EQ9iPMohRyFRez8Qwj0TJPLI0EZBdLYviScmyQB0rvk51IIgSizZABp4XZAmpCBov54MiK95kLOSwrWL5nnbbMOqZCKZABXOjGY8PrN1lF493cGeZAus56QbG0KwZAm</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div>1404407418.345734</div></td></tr></table></div></td></tr></table></div>'
tRp376
sS'etype'
p377
S"<class 'simplejson.scanner.JSONDecodeError'>"
p378
sS'date'
p379
S'Tue May  6 11:55:01 2014'
p380
sS'response'
p381
g74
(S's\x1e&\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x10d439378&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_fbmayor</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4374976c-1eea-4d03-8559-0ef01c907d3d<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" data-w2p_disable_with="default" href="http://www.web2py.com/"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>POI</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/display_form</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Add POI</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/addplace</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>People</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/display_people</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Add People</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/addpeople</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Page</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/display_page</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Page Count</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/index</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Add Page</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/addpage</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Update Pages</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/graphAPI/countAllPageSocialCount</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Post</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/display_post</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Add Post</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/addpost</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Get Post</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/graphAPI/collect_posts</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Update Posts</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/graphAPI/countAllPostSocialCount</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Event</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/display_event</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Add Event</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/fbmayor/default/addevent</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/user/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_fbmayor</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/Applications/web2py.app/Contents/Resources/applications/fbmayor/sessions/127.0.0.1-4374976c-1eea-4d03-8559-0ef01c907d3d&#x27;, mode &#x27;rb+&#x27; at 0x1044cf660&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/Applications/web2py.app/Contents/Resources/applications/fbmayor/sessions/127.0.0.1-4374976c-1eea-4d03-8559-0ef01c907d3d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>45a77650075c3640e50b23072173d774</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4374976c-1eea-4d03-8559-0ef01c907d3d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_fbmayor</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>fbmayor</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>customize me!</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Fbmayor</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/user.html</div></td></tr></table></div>'
tRp382
sS'locals'
p383
(dp384
S'parse_object'
p385
S'<function JSONObject>'
p386
sS'parse_int'
p387
S"<type 'int'>"
p388
sS'string'
p389
S'\'<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN...nue\\xef\\xbc\\x89"></div></form></div></div></body></html>\\r\\n\''
p390
sS'idx'
p391
S'0'
sS'match_number'
p392
S'<built-in method match of _sre.SRE_Pattern object>'
p393
sS'memo'
p394
g233
sS'encoding'
p395
S"'utf-8'"
p396
sS'm'
S'None'
p397
sS'parse_constant'
p398
S'<built-in method __getitem__ of dict object>'
p399
sg372
S'<function _scan_once>'
p400
sS'parse_string'
p401
S'<function py_scanstring>'
p402
sS'strict'
p403
S'True'
p404
sS'parse_array'
p405
S'<function JSONArray>'
p406
sS'object_pairs_hook'
p407
S'None'
p408
sS'nextchar'
p409
S"'<'"
p410
sS'object_hook'
p411
S'None'
p412
sS'errmsg'
p413
S"'Expecting value'"
p414
sS'parse_float'
p415
S"<type 'float'>"
p416
sssS'traceback'
p417
S'Traceback (most recent call last):\n  File "/Applications/web2py.app/Contents/Resources/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/Applications/web2py.app/Contents/Resources/applications/fbmayor/controllers/default.py", line 513, in <module>\n  File "/Applications/web2py.app/Contents/Resources/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/Applications/web2py.app/Contents/Resources/applications/fbmayor/controllers/default.py", line 475, in user\n    return dict(form=auth())\n  File "/Applications/web2py.app/Contents/Resources/gluon/tools.py", line 1303, in __call__\n    return getattr(self, args[0])()\n  File "/Applications/web2py.app/Contents/Resources/gluon/tools.py", line 2357, in login\n    cas_user = cas.get_user()\n  File "/Applications/web2py.app/Contents/Resources/applications/fbmayor/models/db.py", line 94, in get_user\n    user = self.graph.get_object("me")\n  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/facebook.py", line 99, in get_object\n    return self.request(id, args)\n  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/facebook.py", line 308, in request\n    response = _parse_json(file.read())\n  File "/Library/Python/2.7/site-packages/simplejson/__init__.py", line 488, in loads\n    return _default_decoder.decode(s)\n  File "/Library/Python/2.7/site-packages/simplejson/decoder.py", line 370, in decode\n    obj, end = self.raw_decode(s)\n  File "/Library/Python/2.7/site-packages/simplejson/decoder.py", line 389, in raw_decode\n    return self.scan_once(s, idx=_w(s, idx).end())\n  File "/Library/Python/2.7/site-packages/simplejson/scanner.py", line 122, in scan_once\n    return _scan_once(string, idx)\n  File "/Library/Python/2.7/site-packages/simplejson/scanner.py", line 118, in _scan_once\n    raise JSONDecodeError(errmsg, string, idx)\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\n'
p418
s.